%h1 Editing problem
/- form_for(@diagram, :builder => LabelingFormBuilder) do |f|       
- Formtastic::SemanticFormBuilder.default_text_field_size = 70
- semantic_form_for @diagram do |f|
  = f.error_messages
  #first.span-12
    /= f.text_field :position, :label => 'FEN', :class => 'w90'
    = f.input :position, :label => 'FEN', |
      :hint => 'English notation for FEN ("S" for Knight allowed): “2S5/1bQKpR2/4s3/…”' |
    .label Position (w/b)                                                          
    = f.input :white, :class => 'w90', :label => false, |
      :hint => '↕ FIDE notation: “Ka7 De1 Tf2 Lh3 Sh2 [p]e2 …”' |
    = f.input :black, :class => 'w90', :label => false

    #divBlank= image_tag '/fen', :id => 'blank'
    #pcount
    - %w{◁ ▽ △ ▷ CW CCW ↕}.each do |direction|
      = button_to_function direction, "moveBoard('#{direction}')"

    = f.input :stipulation, :input_html => {:size => 6}, :hint => '#2 | s#3 | h#2.5 | win | …'
    = f.input :twin, :input_html => {:size => 20}, | 
      :hint => 'b) Se5->e6 | b) +Th3, c) Sh8<->La2 | 2.1;1.1 | …' |
    %span.label C+
    = f.check_box :tested
  #second.span-12.last
    .label Authors
    #authors
      = render :partial => 'author', :collection => @diagram.authors
    %p
      = add_author_link "Add author"
    = f.input :source, :class => 'w90'
    %table.zero
      %tr
        %td= f.input :label, :input_html => {:size => 15}, :hint => 'Diagram ID, label'
        %td= f.input :published, :as => :string, :input_html => {:size => 11}, :hint => 'YYYY-MM-DD'
    = f.input :solution, :input_html => {:rows => 25, :cols => 5}, :hint => 'Try to adhere to FIDE piece notation: KDTLS.'
    /
      %ul.menu
        %li
          = link_to 'Don\'t save', @diagram
        %li
          = link_to 'Back to list', diagrams_path

  .clear.em1
  = f.submit 'Save'
  %fieldset
    %legend &nbsp; popeye &nbsp;
    = submit_to_remote 'solve', 'Solve', |
      :update => 'solution', :condition => 'validateForm()', |
      :before => "$('solution').update('Popeye solving in progres...')", |
      :method => 'post', :url => { :action => 'solve' }, :html => {:class => 'x'} |
    %br
    %label(for = "pyconds" class = "modest") Popeye “condition” line
    =text_field_tag :pyconds, ""
    %span.fine circe, andernach, madrasi, masand, koeko, …
    %br
    %label(for = "pyopts" class = "modest") Popeye “options” line
    =text_field_tag :pyopts, ""
    %span.fine try, setplay, duplex, maxsolutions, intelligent, …   
    #solution<>
      %span#beforepy Popeye solution will go here
%p.fine
  Entered by
  = @diagram.user ? @diagram.user.name : 'computer'
  %script
    PIECE = '';
    $('diagram_white').observe('keyup', updateFen);
    $('diagram_black').observe('keyup', updateFen);
    $('diagram_position').observe('keyup', updateFromFen);

    initVars();
    ; if (! $('diagram_position').value)
    { updateFen({keyCode: 50})
    } else {
    updateFromFen()
    }

    \//   $('blank').src = '/fen/' + $('diagram_fen').value;
    $('diagram_white').focus();
