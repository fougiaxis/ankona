- content_for :scripts do
  /= javascript_include_tag 'jquery.tokeninput'
  /= javascript_include_tag 'diagram'

%h1 Editing problem
= simple_form_for @diagram do |f|
  /= f.error_messages
  #first.span-12
    = f.input :position, label: 'FEN', |
      hint: 'English notation for FEN'
    .label Position (w/b)                                                          
    = f.input :white, label: false, |
      hint: '↕ FIDE piece notation'
    = f.input :black, label: false

    .cassete
      -%w{k q r b s p}.each do |figurine|
        = image_tag "/images/fig/b#{figurine}.gif", 'data-id' =>  figurine, class: 'todrag'
    #divBlank= image_tag '/fen', id: 'blank'
    .cassete
      -%w{k q r b s p}.each do |figurine|
        = image_tag "/images/fig/#{figurine}.gif", 'data-id' => figurine.upcase, class: 'todrag'
    #pcount
    - %w{◁ ▽ △ ▷ ↻ ↺ ↕}.each do |direction|
      %button{type: "button", class: "moveboard", 'data-name' => direction}
        = direction

    = f.input :stipulation, :input_html => {:class => 'c30p'}, :hint => '#2 | s#3 | h#2.5 | win | …'
    = f.input :twin, :hint => 'b) Se5->e6 | b) +Th3, c) Sh8<->La2 | 2.1;1.1 | …'
    = link_to_function 'Add fairy condition', "addFairyCondition()", :style => @hideIfFairy, :id => 'showfairy'
    #fairy(style = "#{@showIfFairy}")
      = f.input :fairy, :input_html => {:size => 20}, :hint => 'e.g. Circe, Andernach, Sentinels, …', :label => 'Fairy conditions'
    = f.check_box :tested, :label => 'C+'
  #second.span-12.last
    .label Authors
    #authors
      = hidden_field_tag :authors_json, @authors_json
      = text_field_tag :authors_ids
    = f.input :source
    %table.zero
      %tr
        %td= f.input :label, hint: 'Diagram ID, label', input_html: {size: 10}
        %td= f.input :published, as: :date, input_html: {class: 'c30p'}, hint: '-'
    = f.input :solution, input_html: {rows: 25, cols: 5}, hint: 'Please adhere to FIDE piece notation: KDTLS.'
    /
      %ul.menu
        %li
          = link_to "Don't save", @diagram
        %li
          = link_to 'Back to list', diagrams_path

  .clear.em1
  = f.submit 'Save'
  %fieldset
    %legend
      -#= submit_to_remote 'solve', ' Solve with popeye ', |
    = submit 'solve', ' Solve with popeye ', |
      :update => 'solution', :condition => 'validateForm()', |
      :before => "$('solution').update('Popeye solving in progres...')", |
      :method => 'post', :url => { :action => 'solve' }, :html => {:class => 'x'} |
    %label(for = "pyconds" class = "modest") Popeye “condition” line
    =text_field_tag :pyconds, @diagram.fairy, class: "c30p"
    %span.fine circe, andernach, madrasi, masand, koeko, …
    %br
    %label(for = "pyopts" class = "modest") Popeye “options” line
    =text_field_tag :pyopts, "", :class => "c30p"
    %span.fine try, setplay, duplex, maxsolutions, intelligent, …   
    #solution<>
      %span.fine Popeye solution will go here (first run may be slow)
%p.fine
  Entered by
  = @diagram.user ? @diagram.user.name : 'computer'

