- if may_edit? @competition
  %ul.menu
    %li
      = link_to 'Back', competitions_path
    %li
      = link_to 'Edit', edit_competition_path(@competition)
    %li
      = link_to 'Destroy', @competition, :confirm => 'Are you sure?', :method => :delete
%p{:style => "clear:both"} &nbsp;
%h2= h @competition.name
%p
  %b Status:
  != Status.find(:first, :conditions =>                                          |
    {:table => 'competitions', :value => (@competition.status or 0)}).h_display |
%p
  %b Director:
  = h @competition.user.name
%p
  %b Announce:
  = h @competition.announce
%p
  %b Competition is
  = h @competition.formal ? 'formal' : 'informal'
  \.
%p
  %b Deadline:
  = h @competition.deadline
%p
  %b Results:
  = h @competition.results
- @competition.sections.each do |section|
  %h2= section.name
  %p
    Judges confirmed: #{section.users.empty? ? 'none' : section.users.map(&:name)}
  - if may_edit? @competition
    - form_for @competition, :url => {:action => 'judge'}  do |f|
      = f.label 'Send invitation to judge to e-mail'
      = text_field_tag :judge_email, '', :size => 30
      = f.hidden_field :id
      - if @competition.sections.count > 1
        = f.label 'Section'
        = collection_select :competition, :section_ids, @competition.sections, |
          :id, :name                                                           |
      - else
        = collection_select :competition, :section_ids, @competition.sections, |
          :id, :name                                                           |
      = f.submit 'Invite'
  %table
    - section.diagrams.each do |diagram|
      %tr
        %td
          %h3= diagram.id
          = @competition.formal ? '' : diagram.authors.map{|x|x.name}.join(', ')
        %td
          %div{:style => "padding:0; position:relative"}
            = image_tag '/fen/' + diagram.position, :class => :board
        %td
          = diagram.stipulation
          %br/
          = diagram.solution
= link_to 'Back', competitions_path
